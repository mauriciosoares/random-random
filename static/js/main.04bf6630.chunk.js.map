{"version":3,"sources":["boilerplates.js","App.js","index.js"],"names":["name","value","noSleep","NoSleep","randomizeArray","arr","Math","floor","random","length","App","interval","updateCharacter","a","state","characters","displayedCharacter","randomCharacter","setState","isTicking","setTimeout","progressBar","document","getElementById","style","setProperty","window","start","timeoutMl","minutes","seconds","timeout","enable","isRunning","setInterval","stop","clearInterval","disable","cache","localStorage","getItem","JSON","parse","this","prevProps","prevState","setItem","stringify","parsedCharacters","join","className","key","defaultValue","onChange","e","Set","target","split","map","trim","filter","Boolean","type","parseInt","placeholder","width","onClick","disabled","boilerplates","item","id","ref","element","ml","toFixed","formatTimer","React","Component","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.04bf6630.chunk.js","sourcesContent":["export default [{\n  name: 'Base Notes',\n  value: ['C', 'D', 'E', 'F', 'G', 'A', 'B']\n}, {\n  name: 'All Notes',\n  value: ['C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B']\n}, {\n  name: 'Intervals',\n  value: ['Root', 'Minor 2nd', 'Major 2nd', 'Minor 3rd', 'Major 3rd', 'Perfect 4th', 'Augmented 4th', 'Perfect 5th', 'Minor 6th', 'Major 6th', 'Minor 7th', 'Major 7th']\n}]\n","import React from 'react';\nimport boilerplates from './boilerplates'\nimport NoSleep from 'nosleep.js'\n\nconst noSleep = new NoSleep()\n\nfunction formatTimer(ml) {\n  var minutes = Math.floor(ml / 60000);\n  var seconds = ((ml % 60000) / 1000).toFixed(0);\n  return minutes + \":\" + (seconds < 10 ? '0' : '') + seconds;\n}\n\nfunction randomizeArray(arr) {\n  return arr[Math.floor(Math.random() * arr.length)]\n}\n\nclass App extends React.Component {\n  interval = null\n  constructor() {\n    super()\n    let state = {\n      characters: [],\n      interval: 1,\n      minutes: 1,\n      seconds: 0,\n      timeout: 0,\n      isRunning: false,\n      displayedCharacter: '',\n      isTicking: false,\n    }\n\n    const cache = window.localStorage.getItem('cache')\n    if (cache) {\n      state = JSON.parse(cache)\n    }\n\n    this.state = state\n  }\n\n  componentDidMount() {\n    const cache = window.localStorage.getItem('cache')\n\n    if (cache) {\n      this.setState(JSON.parse(cache))\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { characters, interval, minutes, seconds } = this.state\n    if (\n      prevState.characters !== characters ||\n      prevState.interval !== interval ||\n      prevState.minutes !== minutes ||\n      prevState.seconds !== seconds\n    ) {\n      window.localStorage.setItem('cache', JSON.stringify(this.state))\n    }\n  }\n\n  updateCharacter = async () => {\n    const { characters, displayedCharacter, interval } = this.state\n    let randomCharacter = randomizeArray(characters);\n\n    if (characters.length > 1) {\n      while (randomCharacter === displayedCharacter) {\n        randomCharacter = randomizeArray(characters)\n      }\n    }\n\n    this.setState({\n      displayedCharacter: randomCharacter,\n      isTicking: true,\n    })\n\n    setTimeout(() => {\n      const progressBar = document.getElementById('progress-bar')\n      progressBar.style.setProperty('transition', `${interval}s linear`)\n      progressBar.style.setProperty('width', `0`)\n    }, 30)\n\n    window.setTimeout(() => this.setState({ isTicking: false, }), 100)\n  }\n\n  start = () => {\n    const { interval, minutes, seconds } = this.state\n    const timeoutMl = (minutes * 60 * 1000) + (seconds * 1000)\n    this.setState({\n      timeout: timeoutMl,\n    })\n\n    noSleep.enable()\n\n    this.setState({\n      isRunning: true,\n    }, () => {\n      this.updateCharacter()\n      this.interval = window.setInterval(() => {\n        this.updateCharacter()\n      }, interval * 1000)\n\n      this.timeout = window.setInterval(() => {\n        const { timeout } = this.state\n        this.setState({\n          timeout: timeout - 1000,\n        })\n\n        if ((timeout - 1000) === 0) {\n          this.stop()\n        }\n      }, 1000)\n    })\n\n  }\n\n  stop = () => {\n    window.clearInterval(this.interval)\n    window.clearInterval(this.timeout)\n    noSleep.disable()\n    this.setState({\n      isRunning: false,\n    })\n  }\n\n  render() {\n    const { interval, isRunning, displayedCharacter, characters, isTicking, minutes, seconds, timeout } = this.state\n    const parsedCharacters = characters.join(', ')\n\n    return (\n      <div>\n        <h1 className=\"title\">Random Random</h1>\n\n        {!isRunning &&\n          <>\n            <label>Characters to Randomize</label>\n            <input\n              key={parsedCharacters}\n              defaultValue={parsedCharacters}\n              onChange={(e) => {\n                this.setState({\n                  characters: [...new Set(e.target.value.split(',').map(value => value.trim()).filter(Boolean))]\n                })\n              }}\n              className=\"input\"\n              type=\"text\" />\n\n            <label>Interval <i>(in seconds)</i></label>\n            <input\n              defaultValue={interval}\n              onChange={(e) => {\n                this.setState({\n                  interval: parseInt(e.target.value, 10) || 0,\n                })\n              }}\n              className=\"input\"\n              placeholder=\"Interval in Seconds\"\n              type=\"number\" />\n\n            <div className=\"input-group\">\n              <label style={{ width: '50%' }}>Minutes</label>\n              <label style={{ width: '50%' }}>Seconds</label>\n            </div>\n            <div className=\"input-group\">\n              <input\n                defaultValue={minutes}\n                onChange={(e) => {\n                  this.setState({\n                    minutes: parseInt(e.target.value, 10) || 0,\n                  })\n                }}\n                className=\"input\"\n                placeholder=\"Timer Minutes\"\n                type=\"number\" />\n              <input\n                defaultValue={seconds}\n                onChange={(e) => {\n                  this.setState({\n                    seconds: parseInt(e.target.value, 10) || 0,\n                  })\n                }}\n                className=\"input\"\n                placeholder=\"Timer Seconds\"\n                type=\"number\" />\n            </div>\n            <button className=\"button start\" onClick={this.start} disabled={characters.length <= 1 || interval < 1}>START</button>\n\n            <h2>Boilerplates</h2>\n            <ul className=\"boilerplate\">\n              {boilerplates.map(item => (\n                <li key={item.name} onClick={() => this.setState({ characters: item.value })}>\n                  {item.name}\n                </li>\n              ))}\n            </ul>\n          </>\n        }\n        {isRunning &&\n          <>\n            <div className={`displayed-character ${isTicking ? 'tick' : ''}`}>\n              {displayedCharacter}\n            </div>\n\n            <div\n              key={displayedCharacter}\n              id=\"progress-bar\"\n              className=\"progress-bar\"\n              ref={(element) => { this.progressBar = element }} />\n\n\n            <div className=\"timeout\">\n              {formatTimer(timeout)}\n            </div>\n\n            <button className=\"button stop\" onClick={this.stop}>STOP</button>\n          </>\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}