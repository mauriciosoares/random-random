{"version":3,"sources":["boilerplates.js","App.js","index.js"],"names":["name","value","noSleep","NoSleep","randomizeArray","arr","Math","floor","random","length","console","log","App","interval","updateCharacter","a","state","characters","displayedCharacter","timer","randomCharacter","setState","isTicking","setTimeout","progressBar","document","getElementById","style","setProperty","window","start","enable","isRunning","setInterval","stop","clearInterval","disable","cache","localStorage","getItem","JSON","parse","this","prevProps","prevState","setItem","stringify","parsedCharacters","join","className","key","defaultValue","onChange","e","Set","target","split","map","trim","filter","Boolean","placeholder","type","parseInt","onClick","disabled","boilerplates","item","id","ref","element","React","Component","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.b7e2693b.chunk.js","sourcesContent":["export default [{\n  name: 'Base Notes',\n  value: ['C', 'D', 'E', 'F', 'G', 'A', 'B']\n}, {\n  name: 'All Notes',\n  value: ['C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B']\n}, {\n  name: 'Intervals',\n  value: ['Root', 'Minor 2nd', 'Major 2nd', 'Minor 3rd', 'Major 3rd', 'Perfect 4th', 'Augmented 4th', 'Perfect 5th', 'Minor 6th', 'Major 6th', 'Minor 7th', 'Major 7th']\n}]\n","import React from 'react';\nimport boilerplates from './boilerplates'\nimport NoSleep from 'nosleep.js'\n\nconst noSleep = new NoSleep()\nconsole.log(noSleep)\n\nfunction randomizeArray(arr) {\n  return arr[Math.floor(Math.random() * arr.length)]\n}\n\nclass App extends React.Component {\n  interval = null\n  constructor() {\n    super()\n    let state = {\n      characters: [],\n      timer: 1,\n      isRunning: false,\n      displayedCharacter: '',\n      isTicking: false,\n    }\n\n    const cache = window.localStorage.getItem('cache')\n    if (cache) {\n      state = JSON.parse(cache)\n    }\n\n    this.state = state\n  }\n\n  componentDidMount() {\n    const cache = window.localStorage.getItem('cache')\n\n    if (cache) {\n      this.setState(JSON.parse(cache))\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { characters, timer } = this.state\n    if (\n      prevState.characters !== characters ||\n      prevState.timer !== timer\n    ) {\n      window.localStorage.setItem('cache', JSON.stringify(this.state))\n    }\n  }\n\n  updateCharacter = async () => {\n    const { characters, displayedCharacter, timer } = this.state\n    let randomCharacter = randomizeArray(characters);\n\n    if (characters.length > 1) {\n      while (randomCharacter === displayedCharacter) {\n        randomCharacter = randomizeArray(characters)\n      }\n    }\n\n    this.setState({\n      displayedCharacter: randomCharacter,\n      isTicking: true,\n    })\n\n    setTimeout(() => {\n      const progressBar = document.getElementById('progress-bar')\n      progressBar.style.setProperty('transition', `${timer}s linear`)\n      progressBar.style.setProperty('width', `0`)\n    }, 30)\n\n    window.setTimeout(() => this.setState({ isTicking: false, }), 100)\n  }\n\n  start = () => {\n    const { timer } = this.state\n    noSleep.enable()\n    this.setState({\n      isRunning: true,\n    }, () => {\n      this.updateCharacter()\n      this.interval = window.setInterval(() => {\n        this.updateCharacter()\n      }, timer * 1000)\n    })\n\n  }\n\n  stop = () => {\n    window.clearInterval(this.interval)\n    noSleep.disable()\n    this.setState({\n      isRunning: false,\n    })\n  }\n\n  render() {\n    const { timer, isRunning, displayedCharacter, characters, isTicking } = this.state\n    const parsedCharacters = characters.join(', ')\n\n    return (\n      <div>\n        <h1 className=\"title\">Random Random</h1>\n\n        {!isRunning &&\n          <>\n            <input\n              key={parsedCharacters}\n              defaultValue={parsedCharacters}\n              onChange={(e) => {\n                this.setState({\n                  characters: [...new Set(e.target.value.split(',').map(value => value.trim()).filter(Boolean))]\n                })\n              }}\n              className=\"characters input\"\n              placeholder=\"Characters to Randomize\"\n              type=\"text\" />\n\n            <input\n              defaultValue={timer}\n              onChange={(e) => {\n                this.setState({\n                  timer: parseInt(e.target.value, 10) || 0,\n                })\n              }}\n              className=\"interval input\"\n              placeholder=\"Interval in Seconds\"\n              type=\"number\" />\n            <button className=\"button start\" onClick={this.start} disabled={characters.length <= 1 || timer < 1}>START</button>\n\n            <h2>Boilerplates</h2>\n            <ul className=\"boilerplate\">\n              {boilerplates.map(item => (\n                <li key={item.name} onClick={() => this.setState({ characters: item.value })}>\n                  {item.name}\n                </li>\n              ))}\n            </ul>\n          </>\n        }\n        {isRunning &&\n          <>\n            <div className={`displayed-character ${isTicking ? 'tick' : ''}`}>\n              {displayedCharacter}\n            </div>\n\n              <div\n                key={displayedCharacter}\n                id=\"progress-bar\"\n                className=\"progress-bar\"\n                ref={(element) => {this.progressBar = element}} />\n\n            <button className=\"button stop\" onClick={this.stop}>STOP</button>\n          </>\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}