{"version":3,"sources":["boilerplates.js","App.js","index.js"],"names":["name","value","randomizeArray","arr","Math","floor","random","length","App","interval","state","characters","timer","isRunning","displayedCharacter","isTicking","updateCharacter","randomCharacter","setState","window","setTimeout","start","setInterval","stop","clearInterval","cache","localStorage","getItem","this","JSON","parse","prevProps","prevState","setItem","stringify","className","join","onChange","e","Set","target","split","map","trim","filter","Boolean","placeholder","type","defaultValue","parseInt","onClick","disabled","boilerplates","item","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gOAAe,GAAC,CACdA,KAAM,aACNC,MAAO,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MACrC,CACDD,KAAM,YACNC,MAAO,CAAC,IAAK,KAAM,IAAK,KAAM,IAAK,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,MACnE,CACDD,KAAM,YACNC,MAAO,CAAC,OAAQ,YAAa,YAAa,YAAa,YAAa,cAAe,gBAAiB,cAAe,YAAa,YAAa,YAAa,eCL5J,SAASC,EAAeC,GACtB,OAAOA,EAAIC,KAAKC,MAAMD,KAAKE,SAAWH,EAAII,S,IA2H7BC,E,4MAvHbC,SAAW,K,EACXC,MAAQ,CACNC,WAAY,GACZC,MAAO,EACPC,WAAW,EACXC,mBAAoB,GACpBC,WAAW,G,EAqBbC,gBAAkB,WAAO,IAAD,EACqB,EAAKN,MAAxCC,EADc,EACdA,WAAYG,EADE,EACFA,mBAChBG,EAAkBf,EAAeS,GAErC,GAAIA,EAAWJ,OAAS,EACtB,KAAOU,IAAoBH,GACzBG,EAAkBf,EAAeS,GAIrC,EAAKO,SAAS,CACZJ,mBAAoBG,EACpBF,WAAW,IAGbI,OAAOC,YAAW,kBAAM,EAAKF,SAAS,CAAEH,WAAW,MAAW,M,EAGhEM,MAAQ,WAAO,IACLT,EAAU,EAAKF,MAAfE,MACR,EAAKM,SAAS,CACZL,WAAW,IAGb,EAAKG,kBACL,EAAKP,SAAWU,OAAOG,aAAY,WACjC,EAAKN,oBACI,IAARJ,I,EAGLW,KAAO,WACLJ,OAAOK,cAAc,EAAKf,UAC1B,EAAKS,SAAS,CACZL,WAAW,K,kEAlDb,IAAMY,EAAQN,OAAOO,aAAaC,QAAQ,SAEtCF,GACFG,KAAKV,SAASW,KAAKC,MAAML,M,yCAIVM,EAAWC,GAAY,IAAD,EACTJ,KAAKlB,MAA3BC,EAD+B,EAC/BA,WAAYC,EADmB,EACnBA,MAElBoB,EAAUrB,aAAeA,GACzBqB,EAAUpB,QAAUA,GAEpBO,OAAOO,aAAaO,QAAQ,QAASJ,KAAKK,UAAUN,KAAKlB,U,+BAyCnD,IAAD,SACiEkB,KAAKlB,MAArEE,EADD,EACCA,MAAOC,EADR,EACQA,UAAWC,EADnB,EACmBA,mBAAoBH,EADvC,EACuCA,WAAYI,EADnD,EACmDA,UAE1D,OACE,6BACE,wBAAIoB,UAAU,SAAd,kBAEEtB,GACA,oCACE,2BACEZ,MAAOU,EAAWyB,KAAK,MACvBC,SAAU,SAACC,GACT,EAAKpB,SAAS,CACZP,WAAW,YAAK,IAAI4B,IAAID,EAAEE,OAAOvC,MAAMwC,MAAM,KAAKC,KAAI,SAAAzC,GAAK,OAAIA,EAAM0C,UAAQC,OAAOC,cAGxFV,UAAU,mBACVW,YAAY,0BACZC,KAAK,SAEP,2BACEC,aAAcpC,EACdyB,SAAU,SAACC,GACT,EAAKpB,SAAS,CACZN,MAAOqC,SAASX,EAAEE,OAAOvC,MAAO,KAAO,KAG3CkC,UAAU,iBACVW,YAAY,sBACZC,KAAK,WACP,4BAAQZ,UAAU,eAAee,QAAStB,KAAKP,MAAO8B,SAAUxC,EAAWJ,QAAU,GAArF,SAEA,4CACA,wBAAI4B,UAAU,eACXiB,EAAaV,KAAI,SAAAW,GAAI,OACpB,wBAAIH,QAAS,kBAAM,EAAKhC,SAAS,CAAEP,WAAY0C,EAAKpD,UACjDoD,EAAKrD,WAMfa,GACC,oCACE,yBAAKsB,UAAS,8BAAyBpB,EAAY,OAAS,KACzDD,GAEH,4BAAQqB,UAAU,cAAce,QAAStB,KAAKL,MAA9C,c,GAhHM+B,IAAMC,WCFxBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.d528fd67.chunk.js","sourcesContent":["export default [{\n  name: 'Base Notes',\n  value: ['C', 'D', 'E', 'F', 'G', 'A', 'B']\n}, {\n  name: 'All Notes',\n  value: ['C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B']\n}, {\n  name: 'Intervals',\n  value: ['Root', 'Minor 2nd', 'Major 2nd', 'Minor 3rd', 'Major 3rd', 'Perfect 4th', 'Augmented 4th', 'Perfect 5th', 'Minor 6th', 'Major 6th', 'Minor 7th', 'Major 7th']\n}]\n","import React from 'react';\nimport boilerplates from './boilerplates'\n\nfunction randomizeArray(arr) {\n  return arr[Math.floor(Math.random() * arr.length)]\n}\n\nclass App extends React.Component {\n  interval = null\n  state = {\n    characters: [],\n    timer: 1,\n    isRunning: false,\n    displayedCharacter: '',\n    isTicking: false,\n  }\n\n  componentDidMount() {\n    const cache = window.localStorage.getItem('cache')\n\n    if (cache) {\n      this.setState(JSON.parse(cache))\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { characters, timer } = this.state\n    if (\n      prevState.characters !== characters ||\n      prevState.timer !== timer\n    ) {\n      window.localStorage.setItem('cache', JSON.stringify(this.state))\n    }\n  }\n\n  updateCharacter = () => {\n    const { characters, displayedCharacter } = this.state\n    let randomCharacter = randomizeArray(characters);\n\n    if (characters.length > 1) {\n      while (randomCharacter === displayedCharacter) {\n        randomCharacter = randomizeArray(characters)\n      }\n    }\n\n    this.setState({\n      displayedCharacter: randomCharacter,\n      isTicking: true,\n    })\n\n    window.setTimeout(() => this.setState({ isTicking: false, }), 100)\n  }\n\n  start = () => {\n    const { timer } = this.state\n    this.setState({\n      isRunning: true,\n    })\n\n    this.updateCharacter()\n    this.interval = window.setInterval(() => {\n      this.updateCharacter()\n    }, timer * 1000)\n  }\n\n  stop = () => {\n    window.clearInterval(this.interval)\n    this.setState({\n      isRunning: false,\n    })\n  }\n\n  render() {\n    const { timer, isRunning, displayedCharacter, characters, isTicking } = this.state\n\n    return (\n      <div>\n        <h1 className=\"title\">Random Random</h1>\n\n        {!isRunning &&\n          <>\n            <input\n              value={characters.join(', ')}\n              onChange={(e) => {\n                this.setState({\n                  characters: [...new Set(e.target.value.split(',').map(value => value.trim()).filter(Boolean))]\n                })\n              }}\n              className=\"characters input\"\n              placeholder=\"Characters to Randomize\"\n              type=\"text\" />\n\n            <input\n              defaultValue={timer}\n              onChange={(e) => {\n                this.setState({\n                  timer: parseInt(e.target.value, 10) || 0,\n                })\n              }}\n              className=\"interval input\"\n              placeholder=\"Interval in Seconds\"\n              type=\"number\" />\n            <button className=\"button start\" onClick={this.start} disabled={characters.length <= 1}>START</button>\n\n            <h2>Boilerplates</h2>\n            <ul className=\"boilerplate\">\n              {boilerplates.map(item => (\n                <li onClick={() => this.setState({ characters: item.value })}>\n                  {item.name}\n                </li>\n              ))}\n            </ul>\n          </>\n        }\n        {isRunning &&\n          <>\n            <div className={`displayed-character ${isTicking ? 'tick' : ''}`}>\n              {displayedCharacter}\n            </div>\n            <button className=\"button stop\" onClick={this.stop}>STOP</button>\n          </>\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}